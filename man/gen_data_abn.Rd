% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_data_abn.R
\name{gen_data_abn}
\alias{gen_data_abn}
\title{Simulate data according to Causal/Correlated/Noise paradigm}
\usage{
gen_data_abn(
  n = 100,
  p = 60,
  a = 6,
  b = 2,
  rho = 0.5,
  family = c("gaussian", "binomial"),
  signal = c("homogeneous", "heterogeneous"),
  noise = c("exchangeable", "autoregressive"),
  rho.noise = 0,
  beta,
  SNR = 1
)
}
\arguments{
\item{n}{Sample size}

\item{p}{Number of features}

\item{a}{Number of causal ('A') variables}

\item{b}{Number of correlated ('B') variables per causal ('A') variable}

\item{rho}{Correlation between 'A' and 'B' variables}

\item{family}{Generate \code{y} according to linear "gaussian" or logistic "binomial" model}

\item{signal}{Should the groups be heterogeneous (in beta) or homogeneous?}

\item{noise}{Correlation structure between features ('exchangeable' | 'autoregressive')}

\item{rho.noise}{Correlation parameter for noise variables}

\item{beta}{Vector of regression coefficients in the generating model.  Should be either a scalar, in which case it represents the value of each nonzero regression coefficient, or a vector, in which case it should be of length \code{a}}

\item{SNR}{Signal to noise ratio}
}
\description{
This function is designed to scale efficiently to high dimensions, and
therefore imposes some restrictions. For example, correlation must be
positive.
}
\details{
Note that if beta is not supplied, this function must calculate the SNR to
determine an appropriate coefficient size. This will be slow if the dimension
is large and beta is not sparse.
}
\examples{
Data <- gen_data_abn(n=100, p=20, a=2, b=3)
expect_equal(dim(Data$X), c(100, 20))
expect_equal(length(Data$y), 100)
expect_equal(Data$varType[1:8], rep(c('A', 'B', 'B', 'B'), 2))
with(Data, data.frame(beta, varType))
gen_data_abn(100, 10, 2, 1)$beta
gen_data_abn(100, 10, 2, 1, rho=0.9)$beta
gen_data_abn(100, 10, 2, 1, rho=0.9, rho.noise=0.9)$beta
gen_data_abn(100, 10, 2, 1, SNR=3)$beta
gen_data_abn(100, 10, 2, 1, SNR=3, signal='het')$beta
gen_data_abn(100, 10, 2, 1, beta=3)$beta
gen_data_abn(100, 10, 2, 1, beta=2:1)$beta

gen_data_abn(10, 20, 2, 3, family='binomial')$y

gen_data_abn(1000, 10, 2, 2, rho=0.25, rho.noise=0.0, noise='exch')$X |> cor() |> round(digits=2)
gen_data_abn(1000, 10, 2, 2, rho=0.5, rho.noise=0.5, noise='exch')$X |> cor() |> round(digits=2)
gen_data_abn(1000, 10, 2, 2, rho=0.75, rho.noise=0.9, noise='auto')$X |> cor() |> round(digits=2)
}
